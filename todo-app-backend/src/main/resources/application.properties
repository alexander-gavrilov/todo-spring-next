# Datasource Configuration (H2)
spring.datasource.url=jdbc:h2:mem:tododb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update

# OAuth 2.0 Client Credentials (Placeholders)

# Google
spring.security.oauth2.client.registration.google.client-id=YOUR_GOOGLE_CLIENT_ID
spring.security.oauth2.client.registration.google.client-secret=YOUR_GOOGLE_CLIENT_SECRET
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google

# Facebook
spring.security.oauth2.client.registration.facebook.client-id=YOUR_FACEBOOK_CLIENT_ID
spring.security.oauth2.client.registration.facebook.client-secret=YOUR_FACEBOOK_CLIENT_SECRET
spring.security.oauth2.client.registration.facebook.scope=public_profile,email
spring.security.oauth2.client.registration.facebook.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.facebook.redirect-uri=http://localhost:8080/login/oauth2/code/facebook

# Microsoft
spring.security.oauth2.client.registration.microsoft.client-id=YOUR_MICROSOFT_CLIENT_ID
spring.security.oauth2.client.registration.microsoft.client-secret=YOUR_MICROSOFT_CLIENT_SECRET
spring.security.oauth2.client.registration.microsoft.scope=openid,profile,email
spring.security.oauth2.client.registration.microsoft.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.microsoft.redirect-uri=http://localhost:8080/login/oauth2/code/microsoft
# Provider details for Microsoft, as they are not always auto-configured by Spring Boot based on registrationId "microsoft" alone
spring.security.oauth2.client.provider.microsoft.authorization-uri=https://login.microsoftonline.com/common/oauth2/v2.0/authorize
spring.security.oauth2.client.provider.microsoft.token-uri=https://login.microsoftonline.com/common/oauth2/v2.0/token
spring.security.oauth2.client.provider.microsoft.user-info-uri=https://graph.microsoft.com/oidc/userinfo
# Default user-name-attribute for Microsoft is 'sub', but 'name' might be more display-friendly if available.
# CustomOAuth2UserService already handles various name attributes ('name', 'login', 'given_name' + 'family_name').
# Spring uses this for constructing the principal name if not overridden.
spring.security.oauth2.client.provider.microsoft.user-name-attribute=name


# Server Port
server.port=8080

# Logging (Optional: For more detailed Spring Security logging during development)
# logging.level.org.springframework.security=DEBUG
# logging.level.org.springframework.security.oauth2=DEBUG
# logging.level.org.hibernate.SQL=DEBUG
# logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
